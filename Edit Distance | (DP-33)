## Edit Distance | (DP-33)

class Solution {
public:

    int f(string w1, string w2,int n,int m,int i,int j,vector<vector<int>> &dp){
        if(i<0 && j<0 ) return 0;
        if(i<0 && j>=0) return j+1;
        if(i>=0 && j<0) return i+1;
        if(dp[i][j]!=-1) return dp[i][j];
        if(w1[i]==w2[j]){
            return dp[i][j]= f(w1,w2,n,m,i-1,j-1,dp);
        }
        return dp[i][j]= 1+min(f(w1,w2,n,m,i-1,j,dp),min(f(w1,w2,n,m,i,j-1,dp),f(w1,w2,n,m,i-1,j-1,dp)));

    }
    int minDistance(string w1, string w2) {
        int n= w1.length();
        int m= w2.length();
        vector<vector<int>> dp(n+1,vector<int> (m+1,-1));
        return f(w1,w2,n,m,n-1,m-1,dp);


    }
};
