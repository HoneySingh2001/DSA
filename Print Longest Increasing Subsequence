## Print Longest Increasing Subsequence

class Solution {
  public:
    vector<int> getLIS(vector<int>& a) {
        // Code here
        int n=a.size();
        int dp[n];
        int maxi=1;
        int index=-1;
        vector<int> v(n);
        for(int i=0;i<n;i++)
        v[i]=i;
        dp[0]=1;
        for(int i=1;i<n;i++){
            dp[i]=1;
            for(int j=0;j<i;j++){
                if(a[j]<a[i] && dp[i]<1+dp[j]){
                    dp[i]=1+dp[j];
                    v[i]=j;
                }
            }
            if(maxi<dp[i]){
                maxi=dp[i];
                index=i;
            }
        }
        
        vector<int> ans;
        if(index==-1){
            ans.push_back(a[0]);
            return ans;
        }
        ans.push_back(a[index]);
        while(v[index]!=index){
            int i=v[index];
            ans.push_back(a[i]);
            index=v[index];
        }
        reverse(ans.begin(),ans.end());
        return ans;
        
        
        
    }
};
